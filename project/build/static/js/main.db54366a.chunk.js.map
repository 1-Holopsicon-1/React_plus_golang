{"version":3,"sources":["components/Message/Message.jsx","components/ChatHis/ChatHistory.jsx","components/ChatInput/ChatInput.jsx","components/Header/Header.jsx","api/index.js","App.js","index.js"],"names":["Message","element","className","undefined","this","props","message","id","dataId","sessionStorage","getItem","Date","getHours","getMinutes","Component","ChatHS","messages","chatHistory","map","obj","msg","split","ChatInput","btnHand","bind","inputHand","text","document","querySelector","value","send","event","code","classList","toggle","emoji","native","onClick","emojiToggleHand","theme","emojiHandler","placeholder","onKeyDown","Header","socket","WebSocket","App","state","cb","array","Uint32Array","uid","window","crypto","getRandomValues","setItem","data","JSON","parse","setState","prevState","console","log","onopen","onmessage","onclose","onnerror","err","stringify","sendMsg","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.db54366a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Message.sass\"\r\n\r\nclass Message extends Component{\r\n    render() {\r\n        let element = (<div className=\"hidden\"></div>)\r\n        \r\n        if (this.props.message !== undefined) {\r\n        element = (<div id={this.props.dataId} className={'message ' + (this.props.dataId !== sessionStorage.getItem('uid') ? 'notMyMsg' : 'myMsg')}>\r\n            {this.props.message}\r\n            <span className=\"msgTime\">\r\n                {new Date().getHours() + ':' + new Date().getMinutes()}\r\n            </span>\r\n        </div>)}\r\n\r\n        return (<>{element}</>)\r\n    }\r\n}\r\n\r\nexport default Message;","import React, { Component } from \"react\"\r\nimport Message from \"../Message/Message\"\r\nimport \"./ChatHS.sass\"\r\n\r\nexport default class ChatHS extends Component {\r\n    render() {\r\n        const messages = this.props.chatHistory.map(obj => {\r\n            if (obj.msg.split(`\"`)[1] === \"type\") {\r\n                return <Message message={\"User Joined\"} />\r\n            } else {\r\n                return <Message dataId={obj.msg.split(`\"`)[7]} message={obj.msg.split(`\"`)[3]} />\r\n            }\r\n        })\r\n\r\n        return <div className=\"ChatHistory\">{messages}</div>\r\n    }\r\n}","import { ChevronRight, EmojiSmile } from 'react-bootstrap-icons'\r\nimport React, {Component} from \"react\"\r\nimport 'emoji-mart/css/emoji-mart.css'\r\nimport { Picker } from 'emoji-mart'\r\nimport \"./ChatInput.sass\"\r\n\r\nexport default class ChatInput extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.btnHand = this.btnHand.bind(this)\r\n        this.inputHand = this.inputHand.bind(this)\r\n    }\r\n\r\n    btnHand() {\r\n        let text = document.querySelector(\"#inpt\")\r\n        if (text.value === '') return\r\n\r\n        this.props.send(text.value)\r\n        text.value = \"\"\r\n    }\r\n\r\n    inputHand(event) {\r\n        if (event.code === \"Enter\"){\r\n            let text = document.querySelector(\"#inpt\")\r\n            if (text.value === '') return\r\n            this.props.send(text.value)\r\n            text.value = \"\"\r\n        }\r\n    }\r\n\r\n    emojiToggleHand(event) {\r\n        document.querySelector('.emojiMarkt').classList.toggle('hidden')\r\n    }\r\n\r\n    emojiHandler(emoji, event) {\r\n        document.querySelector(\"#inpt\").value = document.querySelector(\"#inpt\").value + emoji.native\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ChatInput\">\r\n                <div className=\"emojiAndInput\">\r\n                    <EmojiSmile onClick={this.emojiToggleHand} className=\"smile\"/>\r\n                    <div className=\"emojiMarkt hidden\">\r\n                        <Picker theme=\"dark\" onClick={this.emojiHandler}/>\r\n                    </div>\r\n                    <input id=\"inpt\" placeholder=\"Message\" onKeyDown={this.inputHand}/>\r\n                </div>\r\n                <div id=\"btn\" onClick={this.btnHand}><ChevronRight className=\"btn_send\"/></div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport \"./Header.sass\";\r\n\r\nconst Header = () => (\r\n    <div className=\"header\">\r\n        <h2>Your id - {sessionStorage.getItem(\"uid\")}</h2>\r\n    </div>\r\n)\r\n\r\nexport default Header;","let socket = new WebSocket(\"ws://localhost:8080/ws\");\r\n\r\nlet connect = cb =>{\r\n    console.log(\"Attempting Connection...\");\r\n\r\n    socket.onopen = () => {\r\n        console.log(\"Success\");\r\n    };\r\n    socket.onmessage = msg =>{\r\n        //console.log(msg.data)\r\n        cb(msg.data);\r\n    }\r\n    socket.onclose = event => {\r\n        console.log(\"Socket close:\", event);\r\n    };\r\n    socket.onnerror = err =>{\r\n        console.log(\"Socket err\", err);\r\n    };\r\n};\r\n\r\nlet sendMsg = msg =>{\r\n    let data = {\r\n        msg: msg,\r\n        uid: sessionStorage.getItem(\"uid\")\r\n    }\r\n    //console.log(\"sending msg\", msg);\r\n    socket.send(JSON.stringify(data))\r\n};\r\n\r\nexport {connect, sendMsg};\r\n\r\n","import ChatHistory from \"./components/ChatHis/ChatHistory\";\r\nimport ChatInput from \"./components/ChatInput/ChatInput\";\r\nimport Header from \"./components/Header/Header\";\r\nimport React, { Component } from \"react\";\r\nimport { connect, sendMsg } from \"./api\";\r\nimport './App.css';\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = { chatHistory: [] }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const array = new Uint32Array(1);\r\n    let uid = window.crypto.getRandomValues(array)[0]\r\n    sessionStorage.setItem(\"uid\", uid);\r\n    \r\n    connect((data) => {\r\n      let { msg, uid } = JSON.parse(data)\r\n      if (uid === undefined) { uid = -1 }\r\n\r\n      this.setState(prevState => ({\r\n        chatHistory: [...this.state.chatHistory, { msg: msg, uid: uid }]\r\n      }))\r\n    })\r\n  }\r\n\r\n  send(msg) {\r\n    sendMsg(msg);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Header />\r\n        <main>\r\n          <ChatHistory chatHistory={this.state.chatHistory} />\r\n          <ChatInput send={this.send} />\r\n        </main>\r\n      </div>\r\n    )\r\n  }\r\n}","import ReactDOM from 'react-dom';\r\nimport React from 'react';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}